{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Chronovyan Documentation","text":"<p>Welcome to the Chronovyan documentation. This is a minimal working setup to get your documentation site running.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Installation</li> </ul>"},{"location":"#about","title":"About","text":"<p>This documentation is built with MkDocs and the Material for MkDocs theme.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to Chronovyan","text":"<p>Thank you for your interest in contributing to Chronovyan! We welcome contributions from everyone.</p>"},{"location":"CONTRIBUTING/#how-to-contribute","title":"How to Contribute","text":"<ol> <li> <p>Fork the repository    Click the \"Fork\" button in the top-right corner of the GitHub repository page.</p> </li> <li> <p>Clone your fork <code>bash    git clone https://github.com/your-username/Chronovyan.git    cd Chronovyan</code></p> </li> <li> <p>Create a new branch <code>bash    git checkout -b feature/your-feature-name</code></p> </li> <li> <p>Make your changes</p> </li> <li>Follow the code style guidelines</li> <li>Write tests for new features</li> <li> <p>Update documentation as needed</p> </li> <li> <p>Commit your changes <code>bash    git add .    git commit -m \"Add your commit message here\"</code></p> </li> <li> <p>Push to your fork <code>bash    git push origin feature/your-feature-name</code></p> </li> <li> <p>Create a Pull Request</p> </li> <li>Go to the original repository on GitHub</li> <li>Click \"New Pull Request\"</li> <li>Select your fork and branch</li> <li>Fill in the PR template</li> <li>Submit the PR</li> </ol>"},{"location":"CONTRIBUTING/#code-style","title":"Code Style","text":"<ul> <li>Follow the existing code style in the codebase</li> <li>Use 4 spaces for indentation</li> <li>Keep lines under 100 characters</li> <li>Write clear, concise commit messages</li> </ul>"},{"location":"CONTRIBUTING/#reporting-issues","title":"Reporting Issues","text":"<p>When reporting issues, please include: - A clear description of the issue - Steps to reproduce the issue - Expected vs. actual behavior - Any relevant error messages - Your environment (OS, compiler version, etc.)</p>"},{"location":"CONTRIBUTING/#development-setup","title":"Development Setup","text":"<p>See the Installation Guide for setup instructions.</p>"},{"location":"CONTRIBUTING/#license","title":"License","text":"<p>By contributing to Chronovyan, you agree that your contributions will be licensed under its MIT License.</p>"},{"location":"api/","title":"API Reference","text":"<p>Welcome to the Chronovyan API reference. This documentation provides detailed information about the Chronovyan programming language's standard library and built-in functions.</p>"},{"location":"api/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Standard Library</li> <li>Built-in Functions</li> <li>Type System</li> </ul>"},{"location":"api/#standard-library","title":"Standard Library","text":""},{"location":"api/#core-modules","title":"Core Modules","text":"<ul> <li><code>io</code>: Input/output operations</li> <li><code>math</code>: Mathematical functions</li> <li><code>collections</code>: Data structures</li> <li><code>time</code>: Date and time functions</li> </ul>"},{"location":"api/#built-in-functions","title":"Built-in Functions","text":""},{"location":"api/#inputoutput","title":"Input/Output","text":"<ul> <li><code>print(value)</code>: Prints the given value to standard output</li> <li><code>read_line()</code>: Reads a line from standard input</li> <li><code>read_number()</code>: Reads a number from standard input</li> </ul>"},{"location":"api/#type-conversion","title":"Type Conversion","text":"<ul> <li><code>to_string(value)</code>: Converts a value to a string</li> <li><code>to_number(value)</code>: Converts a value to a number</li> <li><code>to_boolean(value)</code>: Converts a value to a boolean</li> </ul>"},{"location":"api/#type-system","title":"Type System","text":"<p>Chronovyan is a statically-typed language with the following built-in types:</p> <ul> <li><code>Int</code>: 64-bit signed integer</li> <li><code>Float</code>: 64-bit floating point number</li> <li><code>Bool</code>: Boolean value (<code>true</code> or <code>false</code>)</li> <li><code>String</code>: Sequence of Unicode characters</li> <li><code>Array&lt;T&gt;</code>: Dynamic array of elements of type T</li> <li><code>Map&lt;K,V&gt;</code>: Hash map with keys of type K and values of type V</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.8 or higher</li> <li>pip (Python package manager)</li> </ul>"},{"location":"getting-started/installation/#installation-steps","title":"Installation Steps","text":"<ol> <li> <p>Clone the repository:    <code>bash    git clone https://github.com/Chronovyan/Chronovyan.git    cd Chronovyan</code></p> </li> <li> <p>Install the required dependencies:    <code>bash    pip install -r requirements.txt</code></p> </li> <li> <p>Build the project:    <code>bash    mkdir build    cd build    cmake ..    cmake --build .</code></p> </li> </ol>"},{"location":"getting-started/installation/#verifying-the-installation","title":"Verifying the Installation","text":"<p>Run the tests to verify everything is working correctly:</p> <pre><code>ctest -C Debug\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start Guide</li> <li>API Reference</li> <li>Contributing Guide</li> </ul>"},{"location":"getting-started/quickstart/","title":"Quick Start Guide","text":"<p>Welcome to Chronovyan! This guide will help you get up and running quickly.</p>"},{"location":"getting-started/quickstart/#basic-usage","title":"Basic Usage","text":"<ol> <li> <p>First, make sure you've completed the installation steps.</p> </li> <li> <p>Run the Chronovyan compiler on a source file:    <code>bash    ./chronovyan path/to/your/file.cv</code></p> </li> <li> <p>For more options, use the <code>--help</code> flag:    <code>bash    ./chronovyan --help</code></p> </li> </ol>"},{"location":"getting-started/quickstart/#example","title":"Example","text":"<p>Here's a simple example to get you started:</p> <pre><code>// hello.cv\nfn main() {\n    print(\"Hello, Chronovyan!\");\n}\n</code></pre> <p>Compile and run it with:</p> <pre><code>./chronovyan hello.cv\n</code></pre>"},{"location":"getting-started/quickstart/#next-steps","title":"Next Steps","text":"<ul> <li>Check out the API Reference for detailed documentation</li> <li>Learn how to contribute to the project</li> </ul>"}]}