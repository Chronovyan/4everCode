// Chronovyan Example: Environmental Data Translation
// Difficulty: Beginner
// Concepts: Data types (numbers, strings, booleans), type conversion/casting, variable assignment
// Related Quest: Crystal Calibration (Act I, Chapter 1)

/*
* ==============================
* ENVIRONMENTAL DATA TRANSLATION
* ==============================
* 
* This example demonstrates how to:
* 1. Work with different data types in Chronovyan (strings, numbers, booleans)
* 2. Convert between data types
* 3. Use variables to store data of different types
* 4. Work with conditional logic based on typed data
*
* In this scenario, you're reading data from Chronovyan data crystals that store
* environmental information. Each crystal stores a different type of data,
* but the format needs conversion before it can be properly used.
*/

// --------------------------------------------------------------------------
// Part 1: Reading Raw Data from Crystals
// --------------------------------------------------------------------------

// In Chronovyan, DataCrystal.read() returns raw data in string format
// We need to convert this data to the appropriate types for processing

// Read raw data from each crystal type
DECLARE CONF blue_data : STRING = DataCrystal.read("blue");      // Temperature data (comes as string "42.7")
DECLARE CONF green_data : STRING = DataCrystal.read("green");    // Location name (comes as string "Valley Basin")
DECLARE CONF red_data : INT = DataCrystal.read("red");           // Safety indicator (comes as number 1)
DECLARE CONF yellow_data : STRING = DataCrystal.read("yellow");  // Radiation level (comes as string "23.5")

// Display the raw data
print_to_cora("Raw Data Readings from Crystals:");
print_to_cora("-----------------------------------");
print_to_cora("Raw blue crystal data: " + blue_data);    // Shows "42.7" (as string)
print_to_cora("Raw green crystal data: " + green_data);  // Shows "Valley Basin" (as string)
print_to_cora("Raw red crystal data: " + red_data);      // Shows 1 (as number)
print_to_cora("Raw yellow crystal data: " + yellow_data); // Shows "23.5" (as string)
print_to_cora("");

// --------------------------------------------------------------------------
// Part 2: Converting Data to Appropriate Types
// --------------------------------------------------------------------------

/*
* Data Type Conversion in Chronovyan:
*
* 1. Numbers: Values used for calculations (temperatures, measurements, etc.)
*    - Can be integers (whole numbers) or floating-point (decimals)
*    - Converted using convert_to_number() function
*
* 2. Strings: Text values (names, descriptions, etc.)
*    - Enclosed in quotes: "Valley Basin"
*    - No conversion needed if already a string
*
* 3. Booleans: True/False values (status indicators, conditions, etc.)
*    - Can only be true or false
*    - Converted using convert_to_boolean() function
*    - In Chronovyan, 0 converts to false, any other number to true
*/

// Convert data to proper types
DECLARE CONF temperature : FLOAT = convert_to_number(blue_data);    // Convert "42.7" string to 42.7 number
DECLARE CONF location_name : STRING = green_data;                   // Already a string, no conversion needed
DECLARE CONF is_safe_zone : BOOLEAN = convert_to_boolean(red_data); // Convert 1 to true (boolean)
DECLARE CONF radiation_level : FLOAT = convert_to_number(yellow_data); // Convert "23.5" string to 23.5 number

// --------------------------------------------------------------------------
// Part 3: Using the Converted Data
// --------------------------------------------------------------------------

// Display properly formatted data with appropriate types
print_to_cora("Processed Environmental Data:");
print_to_cora("-----------------------------------");
print_to_cora("Temperature: " + temperature + " degrees");  // Number in calculation
print_to_cora("Location: " + location_name);                // String for display
print_to_cora("Safe Zone: " + is_safe_zone);                // Boolean for conditions
print_to_cora("Radiation Level: " + radiation_level + " mSv"); // Number for measurement
print_to_cora("");

// --------------------------------------------------------------------------
// Part 4: Making Decisions with Typed Data
// --------------------------------------------------------------------------

/*
* Once data is converted to the proper type, we can use it for calculations
* and decision-making. Numbers can be compared with mathematical operators,
* strings can be concatenated, and booleans can be used in logical conditions.
*/

print_to_cora("Environment Analysis Results:");
print_to_cora("-----------------------------------");

// Example of a conditional using the properly typed values
IF (temperature > 30 && radiation_level < 50) {
    print_to_cora("Environment analysis: Habitable");
    
    // Additional conditional using the boolean value
    IF (is_safe_zone) {
        print_to_cora("Safety status: Confirmed safe by local readings");
    } ELSE {
        print_to_cora("Safety status: Exercise caution despite favorable readings");
    }
} ELSE {
    print_to_cora("Environment analysis: Potentially hazardous");
    
    // More detailed analysis using multiple conditions
    IF (temperature > 50) {
        print_to_cora("Warning: Excessive temperature detected");
    }
    
    IF (radiation_level >= 50) {
        print_to_cora("Warning: Harmful radiation levels detected");
    }
}

// Apply calibration to crystal cluster
DataCrystal.calibrate(temperature, location_name, is_safe_zone, radiation_level);

// --------------------------------------------------------------------------
// SYNTAX NOTES:
// --------------------------------------------------------------------------
// - DECLARE CONF variable_name : type = value; is the proper way to declare stable variables
// - DECLARE REB variable_name : type = value; would be used for more dynamic variables
// - Proper types include: INT, FLOAT, BOOLEAN, STRING
// - IF/ELSE (uppercase) are used for conditional logic
// - All statements end with semicolons (;)
// - print_to_cora() is a beginner-friendly output function used in these tutorials

/*
* ==============================
* EXPECTED OUTPUT
* ==============================
*
* Raw Data Readings from Crystals:
* -----------------------------------
* Raw blue crystal data: 42.7
* Raw green crystal data: Valley Basin
* Raw red crystal data: 1
* Raw yellow crystal data: 23.5
*
* Processed Environmental Data:
* -----------------------------------
* Temperature: 42.7 degrees
* Location: Valley Basin
* Safe Zone: true
* Radiation Level: 23.5 mSv
*
* Environment Analysis Results:
* -----------------------------------
* Environment analysis: Habitable
* Safety status: Confirmed safe by local readings
*/ 